

> @voice-agent-mastra-demo/shared@1.0.0 test /workspace/packages/shared
> vitest


[1m[7m[34m DEV [39m[27m[22m [34mv2.1.9 [39m[90m/workspace/packages/shared[39m

[?25l         [90m¬∑[39m should return false for other types
       [90m¬∑[39m isSession[2m (3)[22m
         [90m¬∑[39m should return true for valid session
         [90m¬∑[39m should return false for invalid session
         [90m¬∑[39m should return false for other types
     [90m¬∑[39m Safe Parse Functions[2m (6)[22m
       [90m¬∑[39m safeParseVoiceMessage[2m (2)[22m
         [90m¬∑[39m should return success for valid voice message
         [90m¬∑[39m should return error for invalid voice message
       [90m¬∑[39m safeParseAgentResponse[2m (2)[22m
         [90m¬∑[39m should return success for valid agent response
         [90m¬∑[39m should return error for invalid agent response
       [90m¬∑[39m safeParseSession[2m (2)[22m
         [90m¬∑[39m should return success for valid session
         [90m¬∑[39m should return error for invalid session
     [90m¬∑[39m Error Classes[2m (5)[22m
       [90m¬∑[39m ValidationError[2m (1)[22m
         [90m¬∑[39m should create ValidationError with message and issues
       [90m¬∑[39m SessionError[2m (2)[22m
         [90m¬∑[39m should create SessionError with message and optional sessionId
         [90m¬∑[39m should create SessionError without sessionId
       [90m¬∑[39m AgentError[2m (2)[22m
         [90m¬∑[39m should create AgentError with message and optional code
         [90m¬∑[39m should create AgentError without code
     [90m¬∑[39m Constants[2m (4)[22m
       [90m¬∑[39m should have correct default user preferences
       [90m¬∑[39m should have correct session timeout
       [90m¬∑[39m should have correct max message length
       [90m¬∑[39m should have correct max session messages
[?25l[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G         [32m‚úì[39m should return false for other types
       [32m‚úì[39m isSession[2m (3)[22m
         [32m‚úì[39m should return true for valid session
         [32m‚úì[39m should return false for invalid session
         [32m‚úì[39m should return false for other types
     [32m‚úì[39m Safe Parse Functions[2m (6)[22m
       [32m‚úì[39m safeParseVoiceMessage[2m (2)[22m
         [32m‚úì[39m should return success for valid voice message
         [32m‚úì[39m should return error for invalid voice message
       [32m‚úì[39m safeParseAgentResponse[2m (2)[22m
         [32m‚úì[39m should return success for valid agent response
         [32m‚úì[39m should return error for invalid agent response
       [32m‚úì[39m safeParseSession[2m (2)[22m
         [32m‚úì[39m should return success for valid session
         [32m‚úì[39m should return error for invalid session
     [32m‚úì[39m Error Classes[2m (5)[22m
       [32m‚úì[39m ValidationError[2m (1)[22m
         [32m‚úì[39m should create ValidationError with message and issues
       [32m‚úì[39m SessionError[2m (2)[22m
         [32m‚úì[39m should create SessionError with message and optional sessionId
         [32m‚úì[39m should create SessionError without sessionId
       [32m‚úì[39m AgentError[2m (2)[22m
         [32m‚úì[39m should create AgentError with message and optional code
         [32m‚úì[39m should create AgentError without code
     [32m‚úì[39m Constants[2m (4)[22m
       [32m‚úì[39m should have correct default user preferences
       [32m‚úì[39m should have correct session timeout
       [32m‚úì[39m should have correct max message length
       [32m‚úì[39m should have correct max session messages
[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G [31m‚ùØ[39m [2msrc/__tests__/[22mindex[2m.test.ts[22m[2m (39)[22m
   [31m‚ùØ[39m Shared Package[2m (39)[22m
     [32m‚úì[39m Utility Functions[2m (3)[22m
       [32m‚úì[39m generateId[2m (1)[22m
         [32m‚úì[39m should generate a unique string ID
       [32m‚úì[39m formatTimestamp[2m (1)[22m
         [32m‚úì[39m should format date to ISO string
       [32m‚úì[39m createTimestamp[2m (1)[22m
         [32m‚úì[39m should create a new Date object
     [31m‚ùØ[39m Validation Functions[2m (12)[22m
       [31m‚ùØ[39m validateVoiceMessage[2m (3)[22m
         [32m‚úì[39m should validate a valid voice message
         [31m√ó[39m should throw ValidationError for invalid voice message
         [32m‚úì[39m should validate all mock voice messages
       [31m‚ùØ[39m validateAgentResponse[2m (3)[22m
         [32m‚úì[39m should validate a valid agent response
         [31m√ó[39m should throw ValidationError for invalid agent response
         [32m‚úì[39m should validate all mock agent responses
       [31m‚ùØ[39m validateSession[2m (3)[22m
         [32m‚úì[39m should validate a valid session
         [31m√ó[39m should throw ValidationError for invalid session
         [32m‚úì[39m should validate all mock sessions
       [31m‚ùØ[39m validateUser[2m (3)[22m
         [32m‚úì[39m should validate a valid user
         [31m√ó[39m should throw ValidationError for invalid user
         [32m‚úì[39m should validate all mock users
     [32m‚úì[39m Type Guards[2m (9)[22m
       [32m‚úì[39m isVoiceMessage[2m (3)[22m
         [32m‚úì[39m should return true for valid voice message
         [32m‚úì[39m should return false for invalid voice message
         [32m‚úì[39m should return false for other types
       [32m‚úì[39m isAgentResponse[2m (3)[22m
         [32m‚úì[39m should return true for valid agent response
         [32m‚úì[39m should return false for invalid agent response
         [32m‚úì[39m should return false for other types
       [32m‚úì[39m isSession[2m (3)[22m
         [32m‚úì[39m should return true for valid session
         [32m‚úì[39m should return false for invalid session
         [32m‚úì[39m should return false for other types
     [32m‚úì[39m Safe Parse Functions[2m (6)[22m
       [32m‚úì[39m safeParseVoiceMessage[2m (2)[22m
         [32m‚úì[39m should return success for valid voice message
         [32m‚úì[39m should return error for invalid voice message
       [32m‚úì[39m safeParseAgentResponse[2m (2)[22m
         [32m‚úì[39m should return success for valid agent response
         [32m‚úì[39m should return error for invalid agent response
       [32m‚úì[39m safeParseSession[2m (2)[22m
         [32m‚úì[39m should return success for valid session
         [32m‚úì[39m should return error for invalid session
     [32m‚úì[39m Error Classes[2m (5)[22m
       [32m‚úì[39m ValidationError[2m (1)[22m
         [32m‚úì[39m should create ValidationError with message and issues
       [32m‚úì[39m SessionError[2m (2)[22m
         [32m‚úì[39m should create SessionError with message and optional sessionId
         [32m‚úì[39m should create SessionError without sessionId
       [32m‚úì[39m AgentError[2m (2)[22m
         [32m‚úì[39m should create AgentError with message and optional code
         [32m‚úì[39m should create AgentError without code
     [32m‚úì[39m Constants[2m (4)[22m
       [32m‚úì[39m should have correct default user preferences
       [32m‚úì[39m should have correct session timeout
       [32m‚úì[39m should have correct max message length
       [32m‚úì[39m should have correct max session messages

[31m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[1m[7m Failed Tests 4 [27m[22m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[39m

[31m[1m[7m FAIL [27m[22m[39m src/__tests__/index.test.ts[2m > [22mShared Package[2m > [22mValidation Functions[2m > [22mvalidateVoiceMessage[2m > [22mshould throw ValidationError for invalid voice message
[31m[1mAssertionError[22m: expected error to be instance of ValidationError[39m

- Expected: 
[Function ValidationError]

+ Received: 
[ZodError: [
  {
    "code": "too_small",
    "minimum": 1,
    "type": "string",
    "inclusive": true,
    "exact": false,
    "message": "String must contain at least 1 character(s)",
    "path": [
      "id"
    ]
  },
  {
    "code": "too_small",
    "minimum": 1,
    "type": "string",
    "inclusive": true,
    "exact": false,
    "message": "String must contain at least 1 character(s)",
    "path": [
      "content"
    ]
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "timestamp"
    ],
    "message": "Expected date, received string"
  },
  {
    "code": "too_small",
    "minimum": 1,
    "type": "string",
    "inclusive": true,
    "exact": false,
    "message": "String must contain at least 1 character(s)",
    "path": [
      "userId"
    ]
  },
  {
    "code": "too_small",
    "minimum": 1,
    "type": "string",
    "inclusive": true,
    "exact": false,
    "message": "String must contain at least 1 character(s)",
    "path": [
      "sessionId"
    ]
  },
  {
    "received": "invalid",
    "code": "invalid_literal",
    "expected": "user",
    "path": [
      "type"
    ],
    "message": "Invalid literal value, expected \"user\""
  }
]]

[36m [2m‚ùØ[22m src/__tests__/index.test.ts:[2m82:65[22m[39m
    [90m 80| [39m
    [90m 81| [39m      [34mit[39m([32m'should throw ValidationError for invalid voice message'[39m[33m,[39m () ‚Ä¶
    [90m 82| [39m        [34mexpect[39m(() [33m=>[39m [34mvalidateVoiceMessage[39m(invalidVoiceMessage))[33m.[39m[34mtoThro[39m‚Ä¶
    [90m   | [39m                                                                [31m^[39m
    [90m 83| [39m      })[33m;[39m
    [90m 84| [39m

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[1/4]‚éØ[22m[39m

[31m[1m[7m FAIL [27m[22m[39m src/__tests__/index.test.ts[2m > [22mShared Package[2m > [22mValidation Functions[2m > [22mvalidateAgentResponse[2m > [22mshould throw ValidationError for invalid agent response
[31m[1mAssertionError[22m: expected error to be instance of ValidationError[39m

- Expected: 
[Function ValidationError]

+ Received: 
[ZodError: [
  {
    "code": "too_small",
    "minimum": 1,
    "type": "string",
    "inclusive": true,
    "exact": false,
    "message": "String must contain at least 1 character(s)",
    "path": [
      "id"
    ]
  },
  {
    "code": "too_small",
    "minimum": 1,
    "type": "string",
    "inclusive": true,
    "exact": false,
    "message": "String must contain at least 1 character(s)",
    "path": [
      "content"
    ]
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "timestamp"
    ],
    "message": "Expected date, received string"
  },
  {
    "code": "too_small",
    "minimum": 1,
    "type": "string",
    "inclusive": true,
    "exact": false,
    "message": "String must contain at least 1 character(s)",
    "path": [
      "sessionId"
    ]
  },
  {
    "code": "too_big",
    "maximum": 1,
    "type": "number",
    "inclusive": true,
    "exact": false,
    "message": "Number must be less than or equal to 1",
    "path": [
      "confidence"
    ]
  },
  {
    "received": "invalid",
    "code": "invalid_literal",
    "expected": "agent",
    "path": [
      "type"
    ],
    "message": "Invalid literal value, expected \"agent\""
  }
]]

[36m [2m‚ùØ[22m src/__tests__/index.test.ts:[2m99:67[22m[39m
    [90m 97| [39m
    [90m 98| [39m      [34mit[39m([32m'should throw ValidationError for invalid agent response'[39m[33m,[39m ()‚Ä¶
    [90m 99| [39m        [34mexpect[39m(() [33m=>[39m [34mvalidateAgentResponse[39m(invalidAgentResponse))[33m.[39m[34mtoTh[39m‚Ä¶
    [90m   | [39m                                                                  [31m^[39m
    [90m100| [39m      })[33m;[39m
    [90m101| [39m

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[2/4]‚éØ[22m[39m

[31m[1m[7m FAIL [27m[22m[39m src/__tests__/index.test.ts[2m > [22mShared Package[2m > [22mValidation Functions[2m > [22mvalidateSession[2m > [22mshould throw ValidationError for invalid session
[31m[1mAssertionError[22m: expected error to be instance of ValidationError[39m

- Expected: 
[Function ValidationError]

+ Received: 
[ZodError: [
  {
    "code": "too_small",
    "minimum": 1,
    "type": "string",
    "inclusive": true,
    "exact": false,
    "message": "String must contain at least 1 character(s)",
    "path": [
      "id"
    ]
  },
  {
    "code": "too_small",
    "minimum": 1,
    "type": "string",
    "inclusive": true,
    "exact": false,
    "message": "String must contain at least 1 character(s)",
    "path": [
      "userId"
    ]
  },
  {
    "code": "invalid_type",
    "expected": "date",
    "received": "string",
    "path": [
      "startTime"
    ],
    "message": "Expected date, received string"
  },
  {
    "received": "invalid-status",
    "code": "invalid_enum_value",
    "options": [
      "active",
      "ended",
      "paused"
    ],
    "path": [
      "status"
    ],
    "message": "Invalid enum value. Expected 'active' | 'ended' | 'paused', received 'invalid-status'"
  }
]]

[36m [2m‚ùØ[22m src/__tests__/index.test.ts:[2m116:55[22m[39m
    [90m114| [39m
    [90m115| [39m      [34mit[39m([32m'should throw ValidationError for invalid session'[39m[33m,[39m () [33m=>[39m {
    [90m116| [39m        [34mexpect[39m(() [33m=>[39m [34mvalidateSession[39m(invalidSession))[33m.[39m[34mtoThrow[39m([33mValidati[39m‚Ä¶
    [90m   | [39m                                                      [31m^[39m
    [90m117| [39m      })[33m;[39m
    [90m118| [39m

[31m[2m‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ[3/4]‚éØ[22m[39m

[31m[1m[7m FAIL [27m[22m[39m src/__tests__/index.test.ts[2m > [22mShared Package[2m > [22mValidation Functions[2m > [22mvalidateUser[2m > [22mshould throw ValidationError for invalid user
[31m[1mAssertionError[22m: expected error to be instance of ValidationError[39m

- Expected: 
[Function ValidationError]

+ Received: 
[ZodError: [
  {
    "code": "too_small",
    "minimum": 1,
    "type": "string",
    "inclusive": true,
    "exact": false,
    "message": "String must contain at least 1 character(s)",
    "path": [
      "id"
    ]
  },
  {
    "code": "too_small",
    "minimum": 1,
    "type": "string",
    "inclusive": true,
    "exact": false,
    "message": "String must contain at least 1 character(s)",
    "path": [
      "name"
    ]
  },
  {
    "validation": "email",
    "code": "invalid_string",
    "message": "Invalid email",
    "path": [
      "email"
  